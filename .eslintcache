[{"/Users/lornaroberts/Projects/ctb/ctb-react/src/index.js":"1","/Users/lornaroberts/Projects/ctb/ctb-react/src/App.js":"2","/Users/lornaroberts/Projects/ctb/ctb-react/src/reportWebVitals.js":"3","/Users/lornaroberts/Projects/ctb/ctb-react/src/components/Spends/new.js":"4"},{"size":561,"mtime":1607447920839,"results":"5","hashOfConfig":"6"},{"size":236,"mtime":1607449914205,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607342076391,"results":"8","hashOfConfig":"6"},{"size":2505,"mtime":1607452280367,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"uv0b2f",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/lornaroberts/Projects/ctb/ctb-react/src/index.js",[],["20","21"],"/Users/lornaroberts/Projects/ctb/ctb-react/src/App.js",[],"/Users/lornaroberts/Projects/ctb/ctb-react/src/reportWebVitals.js",[],"/Users/lornaroberts/Projects/ctb/ctb-react/src/components/Spends/new.js",["22"],"import React, { useState} from 'react';\n\nfunction NewSpend(){\n\n      const [date, setDate] = useState(\"\");\n      const [spend, setSpend] = useState(\"\");\n      const [cat, setCat] = useState(\"\");\n      const [cost, setCost] = useState(\"\");\n\n\n\n\n      function refreshPage() {\n        window.location.reload(false);\n      }\n\n      const handleSubmit = (evt) => {\n          console.log(\"handleSubmit is fired\");\n          evt.preventDefault();\n          setDate(date);\n          setSpend(spend);\n          setCat(cat);\n          setCost(cost);\n           postSpend(date, spend, cat, cost);\n           console.log(\"spend posted\")\n           //refreshPage();\n      }\n\n      async function postSpend(date, spend, cat, cost) {\n          const url = 'http://localhost:3080/spends'\n          await fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            body: JSON.stringify({dateSpent: date, itemSpent: spend, itemCat: cat, itemCost: cost}),\n            headers: {'Content-Type': 'application/json'},\n           })\n          .then(function(resp) { return resp.json() }) // Convert data to json\n          .then(function(data) {\n            console.log('Success', data);\n          })\n          .catch(function(error) {\n          });\n          }\n\n          return (\n            <div>\n             <form >\n              <label>\n                Date:\n                <input type=\"date\" name=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n              </label><br></br>\n              <label>\n                Item:\n                <input type=\"text\" name=\"name\" value={spend} onChange={e => setSpend(e.target.value)} />\n              </label>\n              <br></br>\n              <label>\n                Category:\n                  <select id=\"categories\" name=\"categories\" value={cat} onChange={e => setCat(e.target.value)} >\n                    <option value=\"cat1\">Entertainment</option>\n                    <option value=\"cat2\">Sports</option>\n                    <option value=\"cat3\">Food/Drink</option>\n                    <option value=\"cat4\">Other</option>\n                  </select>\n              </label>\n              <br></br>\n              <label>\n                Cost:\n                <input type=\"number\" name=\"cost\" value={cost} onChange={e => setCost(e.target.value)} />\n              </label>\n              <br></br>\n              <input type=\"submit\" value=\"Submit\" onClick={handleSubmit}/>\n            </form>        </div>\n    );\n}\n\nexport default NewSpend;\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":13,"column":16,"nodeType":"29","messageId":"30","endLine":13,"endColumn":27},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'refreshPage' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]